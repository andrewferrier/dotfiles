#!/usr/bin/env python3

import os
from pathlib import Path
import platform
import subprocess
import sys


def get_state_macos():
    if "DARKMODE" in os.environ:
        # DARKMODE comes from day-night-notifier
        if int(os.environ["DARKMODE"]) == 1:
            return "night"
        else:
            return "day"
    else:
        # Assume 10.15+ and AppleInterfaceStyleSwitchesAutomatically=True, see
        # https://stackoverflow.com/a/57429660
        output = subprocess.run(
            ["defaults", "read", "-g", "AppleInterfaceStyle"],
            stdout=subprocess.PIPE,
            stderr=subprocess.DEVNULL,
        )

        if output.returncode > 0:
            return "day"
        elif output.stdout == b"Dark\n":
            return "night"
        else:
            raise Exception("Could not run defaults read")


if platform.system() == "Linux":
    print("No longer supports Linux.")
    sys.exit(1)

state = get_state_macos()

if state == "day":
    scripts_dir = Path.home() / ".local" / "share" / "light-mode.d"
else:
    scripts_dir = Path.home() / ".local" / "share" / "dark-mode.d"

sh_files = list(scripts_dir.glob("*.sh"))

for sh_file in sh_files:
    try:
        sys.stdout.write(f"Running script {sh_file}...")
        result = subprocess.run([sh_file], shell=True, check=True, capture_output=True)
    except subprocess.CalledProcessError as e:
        sys.stderr.write(
            f"Warning: Script {sh_file} failed with return code {e.returncode}\n"
        )
        sys.stderr.write(f"Error message: {e.stderr.decode()}\n")
