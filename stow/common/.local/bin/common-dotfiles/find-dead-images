#!/usr/bin/python
#
# TODO: Support .cr2

import argparse
import logging
import os
from pathlib import Path
import subprocess
import sys

from tqdm import tqdm

logger = logging.getLogger("find-dead-images")
logger.propagate = False
logger.setLevel(logging.DEBUG)

syserr_handler = logging.StreamHandler(stream=sys.stderr)
syserr_handler.setLevel(logging.DEBUG)
logger.addHandler(syserr_handler)

parser = argparse.ArgumentParser()
parser.add_argument("sourcedirs", nargs="+")
args = parser.parse_args()


THRESHOLD = 0.03


def check_image(filename: Path):
    cmd = subprocess.run(
        [
            "convert",
            str(filename),
            "-colorspace",
            "Gray",
            "-format",
            '"%[fx:mean]"',
            "info:",
        ],
        capture_output=True,
        text=True,
        check=True,
    )
    mean_brightness = float(cmd.stdout.replace('"', "").strip())

    if mean_brightness < THRESHOLD or (1 - mean_brightness) < THRESHOLD:
        tqdm.write(str(filename) + ", value: " + str(mean_brightness))
        return True
    else:
        return False


def is_image(filename: Path):
    return filename.suffix.lower() in [".png", ".jpg", ".jpeg", ".gif"]


def walk_dir(dir: str) -> list[Path]:
    paths: list[Path] = []

    for dirpath, _, filenames in os.walk(dir):
        for filename in filenames:
            path = Path(dirpath) / Path(filename)
            if not os.path.islink(path) and is_image(path):
                paths.append(path)

    return paths


def main():
    paths: list[Path] = []

    for dir in args.sourcedirs:
        paths.extend(walk_dir(dir))

    logger.info("Found " + str(len(paths)) + " images.")

    for path in tqdm(paths, total=len(paths)):
        check_image(path)

    logger.info("DONE.")


if __name__ == "__main__":
    main()
