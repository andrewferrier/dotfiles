# See /usr/share/doc/lf/lfrc.example OR /usr/share/doc/lf/examples/lfrc.example
#
# Keybindings:
#
# K - make directory
# R - bulk rename directory
# [, ] - goto prev/next directory in jumplist
# i, a, r - rename file from beginning, end, entire file
# w - launches shell
#
# Commands:
#
# !true - show output from previous command (e.g. for debugging)
# :filter - filters files shown
# :glob-select - selects files using glob
#
# TODO:
# * Use 'set watch true' in lf 33+: https://github.com/gokcehan/lf/pull/1667

# Make shell commands safer
set shellopts '-eu'

# Required to make things like `read -n` work
set shell bash

# Try to see if this fixes a bug which occurs sometimes where image remains
# after quit
cmd on-quit &{{
    $HOME/.config/lf/cleaner.sh
}}

# See https://github.com/gokcehan/lf/wiki/Tips#dynamically-set-number-of-columns
# - will only work on lf 32+
cmd on-redraw &{{
    if [ $lf_width -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $lf_width -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}

cmd on-cd &{{
    fasd -A $PWD
    printf "\033]0; lf [${PWD/#$HOME/~}]\007" > /dev/tty
}}

on-cd

cmd delete ${{
    set -o noglob

    files=$(echo $fx | sed 's/\n/,/g')
    printf "\nDelete $files ?"
    read -n 1 -r REPLY
    case "$REPLY" in
        [yY]) IFS="$(printf '\n\t')"; rm -rfv -- $fx;;
    esac
}}

cmd mkdir_dated_prep %{{
    FOLDER=$(date +%Y-%m-%d-)
    lf -remote "send $id push %mkdir<space>\"$FOLDER\"<left>"
}}

cmd folderize_prep %{{
    FOLDER=$(date +%Y-%m-%d-)
    lf -remote "send $id push :folderize<space>\"$FOLDER\"<left>"
}}

cmd folderize %{{
    set -o noglob

    FOLDER=$1
    mkdir $FOLDER
    IFS="$(printf '\n\t')"; mv $fx $FOLDER
}}

cmd zip ${{
    set -o noglob

    if [ $(echo "$fx" | wc -l) -gt 1 ]; then
        # FIXME: Make this more efficient by not using a temp dir; this is
        # tricker than it looks because we want relative paths
        FOLDER=$(date +%Y-%m-%dT%H-%M-%S)
        mkdir $FOLDER
        IFS="$(printf '\n\t')"; cp -r $fx $FOLDER
        cd $FOLDER
        zip -r ../$FOLDER.zip .
        cd ..
        rm -rf $FOLDER
    else
        effective=$(basename $fx)
        zip -r $effective.zip $effective
        rm -rf $effective
    fi
}}

cmd fasd-file ${{
    set -o noglob

    FILE="$(FZF_TMUX_HEIGHT=100 file-list -f -s)"
    if [ -n "$FILE" ]; then
        PARENT=$(dirname $FILE)
        FILENAME=$(basename $FILE)
        PARENT="$(printf '%s' "$PARENT" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id cd \"$PARENT\""
        FILENAME="$(printf '%s' "$FILENAME" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id select \"$FILENAME\""
    fi
}}

cmd fasd-dir ${{
    set -o noglob

    DIR="$(FZF_TMUX_HEIGHT=100 file-list -d -s)"
    if [ -n "$DIR" ]; then
        DIR="$(printf '%s' "$DIR" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id cd \"$DIR\""
    fi
}}

cmd take %{{
    IFS=" "
    mkdir -p -- "$*"
    lf -remote "send $id select \"$*\""
    lf -remote "send $id push l"
}}

cmd yank &{{
    if [ $(uname) = Linux ]; then
        printf "%s" "$fx" | xclip -selection clipboard
    else
        printf "%s" "$fx" | pbcopy
    fi

    files=$(echo $fx | sed 's/\n/,/g')
    lf -remote "send $id echomsg 'Paths yanked: $files'"
}}

set anchorfind false
set icons
set incsearch true
set infotimefmtnew "2006-01-02 15:04"
set infotimefmtold "2006-01-02 15:04"
set period 1
set scrolloff 5
set timefmt "2006-01-02 15:04:05"
set truncatechar "â€¦"

set cleaner ~/.config/lf/cleaner.sh
set previewer ~/.config/lf/scope.sh

set info size
set dircounts

map <c-f> :fasd-file
map <c-g> :fasd-dir

map <delete> $IFS="$(printf '\n\t')"; trash $fx
map F :folderize_prep
map N $IFS="$(printf '\n\t')"; normfn $fx
map T $tig
map Y :yank
map Kp :push %mkdir<space>""<left>
map Kd :mkdir_dated_prep
map o &$OPENER "$fx"

map ga :cd ~/paperwork
map ge :cd ~/personal
map gf :cd ~/dotfiles
map gg :cd ~/gitco
map gk :cd ~/Desktop
map gl :cd ~/Downloads
map gn :cd ~/notes

# Repeat previous command
map . :read; cmd-history-prev; cmd-enter

# See https://github.com/gokcehan/lf/wiki/Tips#enhancing-the-rename-command
map A :rename; cmd-end
map I :rename; cmd-home
map R $nvim "$PWD"
map a :rename; cmd-end
map i :rename; cmd-home
map r :rename; cmd-delete-home

source ~/.config/lf-local/lfrc
